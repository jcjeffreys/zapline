# Config for Zapline using powerline symbols and colors that look nice in the
# macOS Terminal.app
# The color choices somewhat overcome the issue described here:
# https://apple.stackexchange.com/questions/282911/

# Color definitions
black=0
red=160
green=118
yellow=226
blue=33
magenta=127
cyan=51
white=231

# Source external segments
#source ~/.config/zsh/zapline/segments/duration_segment
source ~/.config/zsh/zapline/segments/git_segment
source ~/.config/zsh/zapline/segments/pwd_segment
source ~/.config/zsh/zapline/segments/ssh_segment
source ~/.config/zsh/zapline/segments/virtual_env_segment

# Segments - uncomment/comment to enable/disable a segment
ZL_SEGMENTS=(
    # Segment                Background  Foreground
    # -------                ----------  ----------
    "time_segment            $black       $white"
    #"duration_segment        $magenta     $white"      # External
    "return_code_segment     $magenta     $white"
    "background_jobs_segment $magenta     $white"
    "user_segment            $yellow      $black"
    "ssh_segment             $yellow      $black"       # External
    "virtual_env_segment     $green       $black"       # External
    #"path_segment            $blue        $white"
    "pwd_segment             $blue        $white"       # External
    "read_only_segment       $red         $black"
    "git_segment             $green       $black"       # External
    #"newline_segment"
    "prompt_segment          $cyan        $black"
)

# Segments Options
ZL_PATH_TRIM=1              # 0 Full path, 1, Current, 2+ trim level
ZL_TIME_SHOW_SECONDS=false
ZL_USER_SHOW_HOST=false
ZL_USER_USE_IP=false
ZL_SSH_SHOW_HOST=true
ZL_SSH_USE_IP=false
ZL_GIT_DIRTY_FG=$black
ZL_GIT_DIRTY_BG=$red
ZL_GIT_AHEAD=false
ZL_GIT_MODIFIED=false
ZL_GIT_STAGED=false
ZL_GIT_CONFLICTS=false
ZL_GIT_UNTRACKED=false
ZL_GIT_STASH=false
ZL_PROMPT_ROOT_BG=$red
ZL_PROMPT_ROOT_FG=$white

# Titlebar
ZL_TITLEBAR="%n@%m"

# Check if not in an SSH session, as host may not support powerline glyphs
if [[ -z "${SSH_CLIENT}" && -z "${SSH_TTY}" ]]; then

    # Redefine symbols using powerline glyphs
    ZL_SYMBOLS[hard_separator]=""
    ZL_SYMBOLS[soft_separator]=""

    ZL_SYMBOLS[duration]='⧗'

    ZL_SYMBOLS[python]=''

    ZL_SYMBOLS[pwd_trimmed]='…'

    ZL_SYMBOLS[git_branch]=""
    ZL_SYMBOLS[git_untracked]="…"
    ZL_SYMBOLS[git_stash]="⚑"
    ZL_SYMBOLS[git_ahead]="↑"
    ZL_SYMBOLS[git_behind]="↓"
    ZL_SYMBOLS[git_modified]="✚"
    ZL_SYMBOLS[git_staged]="✓"
    ZL_SYMBOLS[git_conflicts]="✗"

    ZL_SYMBOLS[read_only]=""

fi